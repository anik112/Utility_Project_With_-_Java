/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sqlrunnerinoracle.view;

import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import sqlrunnerinoracle.core.CoreSQLEditeor;

/**
 *
 * @author VSI SERVER
 */
public class SQLEditeor extends javax.swing.JFrame {

    private String fileSavingLocation = "D:\\temp-export.xls";

    /**
     * Creates new form SQLEditeor
     */
    public SQLEditeor() {
        initComponents();
        lblShowselectedFileName.setText(fileSavingLocation);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtEditorArea = new javax.swing.JTextArea();
        btnExportInXls = new javax.swing.JButton();
        lblShowselectedFileName = new javax.swing.JLabel();
        btnBrowseFile = new javax.swing.JButton();
        progressBar = new javax.swing.JProgressBar();
        btnOpenFolder = new javax.swing.JButton();
        lblCopyRightTeg = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuItemDatabaseSetup = new javax.swing.JMenu();
        itemMenuDatabaseSetup = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("VSI SQL Editor");
        setFont(new java.awt.Font("Consolas", 0, 10)); // NOI18N
        setLocation(new java.awt.Point(200, 100));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 224));

        txtEditorArea.setColumns(20);
        txtEditorArea.setLineWrap(true);
        txtEditorArea.setRows(5);
        txtEditorArea.setToolTipText("Write only select SQL and don't use any parameter variable in this SQL.");
        jScrollPane1.setViewportView(txtEditorArea);

        btnExportInXls.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        btnExportInXls.setText("Export .xls");
        btnExportInXls.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.lightGray));
        btnExportInXls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportInXlsActionPerformed(evt);
            }
        });

        lblShowselectedFileName.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        lblShowselectedFileName.setText(" ");
        lblShowselectedFileName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnBrowseFile.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        btnBrowseFile.setText("Save");
        btnBrowseFile.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnBrowseFile.setContentAreaFilled(false);
        btnBrowseFile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBrowseFile.setDefaultCapable(false);
        btnBrowseFile.setFocusPainted(false);
        btnBrowseFile.setFocusable(false);
        btnBrowseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseFileActionPerformed(evt);
            }
        });

        progressBar.setToolTipText("");
        progressBar.setName(""); // NOI18N
        progressBar.setStringPainted(true);

        btnOpenFolder.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        btnOpenFolder.setText("Open");
        btnOpenFolder.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.lightGray));
        btnOpenFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenFolderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblShowselectedFileName, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                        .addGap(0, 0, 0)
                        .addComponent(btnBrowseFile, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnExportInXls, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOpenFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblShowselectedFileName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnOpenFolder, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExportInXls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBrowseFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        lblCopyRightTeg.setFont(new java.awt.Font("Lucida Sans", 1, 10)); // NOI18N
        lblCopyRightTeg.setForeground(new java.awt.Color(255, 0, 51));
        lblCopyRightTeg.setText("@copyright: Vistasoft IT Bangladesh Ltd.");

        menuItemDatabaseSetup.setText("Setup");

        itemMenuDatabaseSetup.setText("Database Setup");
        itemMenuDatabaseSetup.setEnabled(false);
        itemMenuDatabaseSetup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenuDatabaseSetupActionPerformed(evt);
            }
        });
        menuItemDatabaseSetup.add(itemMenuDatabaseSetup);

        jMenuBar1.add(menuItemDatabaseSetup);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblCopyRightTeg))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(lblCopyRightTeg))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExportInXlsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportInXlsActionPerformed
        // TODO add your handling code here:
        
        progressBar.setValue(0);
        progressBar.setString("0%");

        String sql = txtEditorArea.getText();

        // Check the sql is valied or not
        boolean isValied = false;
        System.out.println(sql.indexOf("select"));
        if (sql.indexOf("select") >= 0) {
            isValied = true;
        } else if (sql.indexOf("SELECT") >= 0) {
            isValied = true;
        } else if (sql.indexOf("Select") >= 0) {
            isValied = true;
        } else {
            isValied = false;
        }
        // if valid call core function
        if (isValied && (!sql.isEmpty())) {
            if (new CoreSQLEditeor().btnExportInXlsClick(sql, fileSavingLocation)) {
                progressBar.setValue(100);
                progressBar.setString("100%");

                JOptionPane.showMessageDialog(
                        null, "Save Data In \n" + fileSavingLocation,
                        ":: Data Saved ::", JOptionPane.INFORMATION_MESSAGE);
            }

            /*
            // This Code generate for runing process status in progress bar.
            ProcessToMakeXlsFile makeXlsFile = new ProcessToMakeXlsFile(sql, fileSavingLocation);
            makeXlsFile.addPropertyChangeListener(new PropertyChangeListener() {
                @Override
                public void propertyChange(PropertyChangeEvent evt) {
                    if (evt.getPropertyName().equals("writeXLS")) {
                        progressBar.setValue((int) evt.getNewValue());
                        progressBar.setString(evt.getNewValue().toString()+"%");
                    }
                }
            });
            makeXlsFile.execute();
             */
        } else {
            JOptionPane.showMessageDialog(
                    null, "This console work for only \nGet data from database Or write SQL.",
                    ":: Write Error-101 :: ", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnExportInXlsActionPerformed

    private void btnBrowseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseFileActionPerformed
        // TODO add your handling code here:
        System.out.println("Click");
        JFileChooser chooser = new JFileChooser("D:\\");
        chooser.showSaveDialog(null);

        try {
            fileSavingLocation = chooser.getSelectedFile().getPath();
            if (!(fileSavingLocation.indexOf(".xls") >= 0)) {
                fileSavingLocation += ".xls";
            }
            lblShowselectedFileName.setText(fileSavingLocation);
            //System.out.println("=> " + fileSavingLocation);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(
                    null, "Please select the file.",
                    ":: File Error-102 :: ", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnBrowseFileActionPerformed

    private void itemMenuDatabaseSetupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuDatabaseSetupActionPerformed
        // TODO add your handling code here:
        // new DatabaseSetup().setVisible(true);
    }//GEN-LAST:event_itemMenuDatabaseSetupActionPerformed

    private void btnOpenFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenFolderActionPerformed
        try {
            // TODO add your handling code here:
            Desktop desktop = Desktop.getDesktop();
            desktop.open(new File(fileSavingLocation));
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(
                    null, "File Not Found.",
                    ":: File Error-103 :: ", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(SQLEditeor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnOpenFolderActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowseFile;
    private javax.swing.JButton btnExportInXls;
    private javax.swing.JButton btnOpenFolder;
    private javax.swing.JMenuItem itemMenuDatabaseSetup;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCopyRightTeg;
    private javax.swing.JLabel lblShowselectedFileName;
    private javax.swing.JMenu menuItemDatabaseSetup;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JTextArea txtEditorArea;
    // End of variables declaration//GEN-END:variables
}
