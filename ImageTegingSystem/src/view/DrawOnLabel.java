/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Stroke;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.stage.FileChooser;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Anik
 */
public class DrawOnLabel extends javax.swing.JFrame {

    int positionX = 0;
    int positionY = 0;
    DefaultTableModel model;
    Object row[] = new Object[5];
    int boxCount = 1;
    int moverCount = 0;
    float lineThickness = 2;
    File selectedFolder;
    int imageCount = 0;
    File[] listOfFile;

    /**
     * Creates new form DrawOnLabel
     */
    public DrawOnLabel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblBoard = new javax.swing.JLabel();
        lblSize = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblShowPoint = new javax.swing.JTable();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnSelectFolder = new javax.swing.JButton();
        lblShowURLpath = new javax.swing.JLabel();
        btnImagePrev = new javax.swing.JButton();
        btnImageNext = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Image Teging");
        setLocation(new java.awt.Point(300, 50));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lblBoard.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblBoard.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lblBoardMouseMoved(evt);
            }
        });
        lblBoard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblBoardMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblBoardMouseReleased(evt);
            }
        });

        lblSize.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSize.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        tblShowPoint.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Object", "X", "Y", "W", "H"
            }
        ));
        jScrollPane1.setViewportView(tblShowPoint);

        btnNext.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnNext.setText(">>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrevious.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnPrevious.setText("<<");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        btnSelectFolder.setText("Select folder");
        btnSelectFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectFolderActionPerformed(evt);
            }
        });

        lblShowURLpath.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnImagePrev.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnImagePrev.setText("<< Img");
        btnImagePrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImagePrevActionPerformed(evt);
            }
        });

        btnImageNext.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnImageNext.setText("Img >>");
        btnImageNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImageNextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnImagePrev)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnImageNext)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPrevious)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNext)
                        .addGap(18, 18, 18)
                        .addComponent(lblSize, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSelectFolder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblShowURLpath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblBoard, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnImageNext)
                            .addComponent(btnImagePrev)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnNext)
                                .addComponent(btnPrevious))))
                    .addComponent(btnSelectFolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblShowURLpath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    private void lblBoardMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBoardMousePressed
        // TODO add your handling code here:
        positionX = evt.getX();
        System.out.println("----> " + evt.getX());
        positionY = evt.getY();
    }//GEN-LAST:event_lblBoardMousePressed

    private void lblBoardMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBoardMouseReleased
        // TODO add your handling code here:

        int positionRX = evt.getX();
        int positionRY = evt.getY();

        System.out.println("> Pressed: X:" + positionX + " Y:" + positionY);
        System.out.println("> Released: X:" + positionRX + " Y:" + positionRY + "\n");

        //Rectangle r=new Rectangle((positionX + 13), (positionY + 37), (positionRX - positionX), (positionRY - positionY));
        if ((positionRX > positionX) && (positionRY > positionY)) {
            Graphics2D g = (Graphics2D) lblBoard.getGraphics();
            g.setStroke(new BasicStroke(lineThickness));
            g.setColor(Color.red);
            int recWidth = (positionRX - positionX);
            int recHight = (positionRY - positionY);
            g.drawRect((positionX), (positionY), recWidth, recHight);
            lblBoard.paintComponents(g);
            row[0] = boxCount;
            row[1] = positionX;
            row[2] = positionY;
            row[3] = recWidth;
            row[4] = recHight;

            this.model.addRow(row);
            boxCount++;
        }
    }//GEN-LAST:event_lblBoardMouseReleased

    private void lblBoardMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBoardMouseMoved
        // TODO add your handling code here:
        lblSize.setText("X: " + evt.getX() + " Y: " + evt.getY());
    }//GEN-LAST:event_lblBoardMouseMoved

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        boxCount = 1;
        lblBoard.removeAll();
        lblBoard.repaint();
        lblBoard.revalidate();
        model.setRowCount(0);
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        updateDrawingRect((Graphics2D) lblBoard.getGraphics(), "Next");
        moverCount++;
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        // TODO add your handling code here:
        moverCount--;
        updateDrawingRect((Graphics2D) lblBoard.getGraphics(), "Prev");
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnImagePrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImagePrevActionPerformed
        // TODO add your handling code here:
        if (listOfFile.length > 0) {
            imageCount--;
            String curpath = listOfFile[imageCount].getAbsolutePath();
            System.out.println("=>> "+listOfFile[imageCount].getName());
            if (curpath.contains(".jpeg") || curpath.contains(".jpg") || curpath.contains(".png")) {
                showImage(listOfFile[imageCount]);
                System.out.println(listOfFile[imageCount].getName());
            }
        }
    }//GEN-LAST:event_btnImagePrevActionPerformed

    private void btnImageNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImageNextActionPerformed
        // TODO add your handling code here:
        if (listOfFile.length > 0) {
            imageCount++;
            String curpath = listOfFile[imageCount].getAbsolutePath();
            System.out.println("=>> "+listOfFile[imageCount].getName());
            if (curpath.contains(".jpeg") || curpath.contains(".jpg") || curpath.contains(".png")) {
                showImage(listOfFile[imageCount]);
                System.out.println(listOfFile[imageCount].getName());
            }
        }
    }//GEN-LAST:event_btnImageNextActionPerformed

    private void btnSelectFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectFolderActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser("");
        chooser.showSaveDialog(null);

        try {
            selectedFolder = chooser.getCurrentDirectory();
            lblShowURLpath.setText(selectedFolder.getPath());
            listOfFile = selectedFolder.listFiles();
            String curpath = listOfFile[imageCount].getAbsolutePath();
            if (curpath.contains(".jpeg") || curpath.contains(".jpg") || curpath.contains(".png")) {
                showImage(listOfFile[imageCount]);
                System.out.println(listOfFile[imageCount].getName());
            }
            //System.out.println("=> " + fileSavingLocation);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(
                    null, "Please select the file.",
                    ":: File Error-102 :: ", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btnSelectFolderActionPerformed

    private void updateDrawingRect(Graphics2D g, String key) {
        try {
            if (key.endsWith("Next")) {
                g.setColor(Color.green);
            } else if (key.endsWith("Prev")) {
                g.setColor(Color.yellow);
            } else {
                g.setColor(Color.red);
            }
            int recX = (int) model.getValueAt(moverCount, 1);
            int recY = (int) model.getValueAt(moverCount, 2);
            int recWidth = (int) model.getValueAt(moverCount, 3);
            int recHight = (int) model.getValueAt(moverCount, 4);
            g.setStroke(new BasicStroke(lineThickness));
            g.drawRect(recX, recY, recWidth, recHight);
            lblBoard.paintComponents(g);
        } catch (Exception e) {
            moverCount = (key.endsWith("Next")) ? moverCount-- : 0;
            moverCount = (key.endsWith("Prev")) ? moverCount++ : 0;
            System.out.println("No data in there.. !");
        }
    }

    private void showImage(File f) {
        try {
            lblBoard.removeAll();
            // TODO add your handling code here:
            BufferedImage image = ImageIO.read(f);
            //Icon icon=new ImageIcon("C:\\Users\\Anik\\Downloads\\IMG_20200814_030626.jpg");
            Image i = image.getScaledInstance(lblBoard.getWidth(), lblBoard.getHeight(), Image.SCALE_SMOOTH);
            lblBoard.setIcon(new ImageIcon(i));
            model = (DefaultTableModel) tblShowPoint.getModel();
        } catch (IOException ex) {
            Logger.getLogger(DrawOnLabel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnImageNext;
    private javax.swing.JButton btnImagePrev;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnSelectFolder;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBoard;
    private javax.swing.JLabel lblShowURLpath;
    private javax.swing.JLabel lblSize;
    private javax.swing.JTable tblShowPoint;
    // End of variables declaration//GEN-END:variables
}
